数字签名算法DSA
#########################

DSA（Digital Signature Algorithm）是Schnorr和ElGamal签名算法的变种，被美国NIST作为DSS(DigitalSignature Standard)。 DSA是基于整数有限域离散对数难题的。



DSA是一种更高级的验证方式。一般用于数字签名和认证。DSA 不单单只有公钥、私钥，还有数字签名。私钥加密生成数字签名，公钥验证数据及签名。在DSA数字签名和认证中，发送者使用自己的私钥对文件或消息进行签名，接受者收到消息后使用发送者的公钥来验证签名的真实性。如果数据和签名不匹配则认为验证失败！数字签名的作用就是校验数据在传输过程中不被修改。数字签名，是单向加密的升级！


概述
=========


1、DSA是以RSA为基础形成的

2、java6提供了DSA的实现，但是java6只提供了SHA1withDSA的实现

3、bouncycastle扩展提供了其他的DSA实现方式

4、遵循“私钥签名，公钥验证”的原则


模型分析
==============

这个和RSA一样，只是换了一个算法而已


DSA加密算法的安全性
===========================

DSA加密算法主要依赖于整数有限域离散对数难题，素数P必须足够大，且p-1至少包含一个大素数因子以抵抗Pohlig &Hellman算法的攻击。M一般都应采用信息的HASH值。DSA加密算法的安全性主要依赖于p和g，若选取不当则签名容易伪造，应保证g对于p-1的大素数因子不可约。

算术中运用的参数
==========================



DSA算法中应用了下述参数：

p：L bits长的素数。L是64的倍数，范围是512到1024；

q：p – 1的160bits的素因子；

g：g = h^((p-1)/q) mod p，h满足h < p – 1, h^((p-1)/q) mod p > 1；

x：x < q，x为私钥 ；

y：y = g^x mod p ，( p, q, g, y )为公钥；

H( x )：One-Way Hash函数。DSS中选用SHA( Secure Hash Algorithm )。

p, q, g可由一组用户共享，但在实际应用中，使用公共模数可能会带来一定的威胁。

签名及验证协议
======================

P产生随机数k，k < q；P计算 r = ( g^k mod p ) mod q

s = ( k^(-1) (H(m) + xr)) mod q

签名结果是( m, r, s )。

验证时计算 w = s^(-1)mod q

u1 = ( H( m ) * w ) mod q

u2 = ( r * w ) mod q

v = (( g^u1 * y^u2 ) mod p ) mod q

若v = r，则认为签名有效。

——————————————————————————————————

SSL证书是HTTP明文协议升级HTTPS加密协议的重要渠道，是网络安全传输的加密通道。关于更多SSL证书的资讯，请关注数安时代（GDCA）。GDCA致力于网络信息安全，已通过WebTrust 的国际认证，是全球可信任的证书签发机构。GDCA专业技术团队将根据用户具体情况为其提供最优的产品选择建议，并针对不同的应用或服务器要求提供专业对应的HTTPS解决方案。

文章转载https://www.trustauth.cn/baike/24387.html